[magic(E7だけ):2b][ver:1b][alg:1b][mkid:1b][kid:16b][nonce:12b][本文(ct)][tag:16b]

MK.e7		json				管理者	マスターキーリスト 1ファイルのみ存在
.kid.e7		json				管理者	KEK-ID(KID)リスト マスターキーごとに存在
.kek.e7		....				ユーザー	KEKリスト 割り当てられたKEKを保持 論理的に読み取り専用ファイル ユーザーの環境ごとにOSシークレットストアに保存されたUUID?で暗号化 ユーザーごとに1つずつ存在
.raw.kek.e7	平文					管理者	一時的に生成 長期間の保管は非推奨
.cus.kek.e7	平文					ユーザー	KEKリスト拡張 暗号化の各部分に触れない見た目等のみをユーザーにカスタマイズを許可するため
.adm.kek.e7	MK	HKDF,AES256GCM	管理者	基本構造は.kek.e7と同じ 管理者がKEKリストを保管するときに使う
.dst.kek.e7	....				両方		基本構造は.kek.e7と同じ 管理者が配布用一時パスワードを設定し配布する際に使う dstファイル自体も一時的な存在 ユーザーはこれを受け取り直ちに.kek.e7に変換

.kek.e7
	管理者 adm.kek.e7 -> dst.kek.e7
	ユーザー dst.kek.e7 -> kek.e7
		(内部でdevice_key使って再暗号化->プログラムのファイル群(localappdata/ead7)に保存)
	配布用パスワードは使い捨て

kek系に対するkidの追記は、一旦raw.kekに戻してから追記して元の形式に戻す


. -> MK				管理者
MK + KID -> KEK		管理者
KEK + nonce -> DEC	利用者(システム内部で処理)

kidPath			MK=1 の KID.label=test の場合、 01test


%localappdata%/yy981/EAD7
	1.kek.e7






















CLI先に実装?
鍵の失効を通達する機構がない どうすべきか